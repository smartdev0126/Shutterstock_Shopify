<div class="tuneboom product-template__container page-width pt-5"
     id="ProductSection-{{ section.id }}"
     data-section-id="{{ section.id }}"
     data-section-type="Digital Album"
     data-product-id="{{ product.id }}"
     data-limit="4"
     data-enable-history-state="true"
     data-ajax-enabled="{{ settings.enable_ajax }}"
>

    {% comment %}
        Get first variant, or deep linked one
    {% endcomment %}
    {%- assign current_variant = product.selected_or_first_available_variant -%}
    {%- assign product_image_zoom_size = '1024x1024' -%}
    {%- assign product_image_scale = '2' -%}
    {%- assign enable_image_zoom = section.settings.enable_image_zoom -%}
    {%- assign compare_at_price = current_variant.compare_at_price -%}
    {%- assign price = current_variant.price -%}
    {%- assign album = product.metafields.tuneboom.album -%}
    {%- assign tracks = album.tracks -%}
    {%- assign tuneboomID = album.id -%}

    {%- assign product_media_width = 'medium-up--one-half' -%}
    {%- assign product_description_width = 'medium-up--one-half' -%}
    {%- assign height = 530 -%}


    {% assign type = product.type %}
    {% case type %}
    {% when 'Digital Track' %}
    {%- assign trackType = 'TRACK' -%}
    {% when 'Digital Album' %}
    {%- assign trackType = 'ALBUM' -%}
    {% endcase %}

    <div class="tuneboom-grid product-single{% if section.settings.enable_payment_button %} product-single--{{ section.settings.media_size }}-media{% endif %}">
        <div class="tuneboom-grid__item product-single__media-group {{ product_media_width }}{% if section.settings.media_size == 'full' %} product-single__media-group--full{% endif %}" data-product-single-media-group>
            {%- assign featured_media = product.selected_or_first_available_variant.featured_media | default: product.featured_media -%}

            {%- for media in product.media -%}
                {% include 'media-tuneboom', media: media, featured_media: featured_media, height: height, enable_image_zoom: enable_image_zoom, image_zoom_size: product_image_zoom_size, image_scale: product_image_scale %}
            {%- endfor -%}

            <noscript>
                {% capture product_image_size %}{{ height }}x{% endcapture %}
                <img src="{{ featured_media | img_url: product_image_size, scale: product_image_scale }}" alt="{{ featured_media.alt }}" id="FeaturedMedia-{{ section.id }}" class="product-featured-media-tuneboom" style="max-width: {{ height }}px;">
            </noscript>

            {% assign first_3d_model = product.media | where: "media_type", "model" | first %}

            {%- if first_3d_model -%}
                <button
                        aria-label="{{ 'products.product.view_in_space_label' | t }}"
                        class="product-single__view-in-space"
                        data-shopify-xr
                        data-shopify-model3d-id="{{ first_3d_model.id }}"
                        data-shopify-title="{{ product.title | escape }}"
                        data-shopify-xr-hidden
                >
                    {% include 'icon-3d-badge-full-color' %}<span class='product-single__view-in-space-text'>{{ 'products.product.view_in_space' | t }}</span>
                </button>
            {%- endif -%}


            <div class="thumbnails-wrapper">
                <h2 class="my-4">YOU MAY ALSO LIKE</h2>
                <div class="product-recommendations__list product-single__thumbnails"
                     data-base-url="{{ routes.product_recommendations_url }}"
                     data-product-id="{{ product.id }}"
                >
                </div>
            </div>
        </div>

        <div class="tuneboom-grid__item {{ product_description_width }}">
            <div class="product-single__meta">
                <h2 class="product-single__subtitle mt-1 mb-2">
                    {% if album.collaborators %} {{ album.collaborators }} {% else %}{{ trackType }}{% endif %}
                </h2>
                <h1 class="product-single__title">{{ product.title }}</h1>
                <script>window.performance.mark('debut:product:title_visible');</script>

                <div class="product__price">
                    {% include 'product-price-tuneboom', variant: current_variant, show_vendor: section.settings.show_vendor %}
                </div>

                {% capture "form_classes" -%}
                    product-form product-form-{{ section.id }}
                    {%- if section.settings.enable_payment_button and product.has_only_default_variant %} product-form--payment-button-no-variants {%- endif -%}
                    {%- if current_variant.available == false %} product-form--variant-sold-out {%- endif -%}
                {%- endcapture %}

                {% form 'product', product, data-productid: product.id, class:form_classes, novalidate: 'novalidate', data-product-form: '' %}
                    <select name="id" data-productid="{{ product.id }}" id="ProductSelect-{{ section.id }}" class="product-form__variants no-js">
                        {% for variant in product.variants %}
                            <option value="{{ variant.id }}"
                                    {%- if variant == current_variant %} selected="selected" {%- endif -%}
                            >
                                {{ variant.title }}  {%- if variant.available == false %} - {{ 'products.product.sold_out' | t }}{% endif %}
                            </option>
                        {% endfor %}
                    </select>


                    <div class="product-form__error-message-wrapper product-form__error-message-wrapper--hidden{% if section.settings.enable_payment_button %} product-form__error-message-wrapper--has-payment-button{% endif %}"
                         data-error-message-wrapper
                         role="alert"
                    >
                        <span class="visually-hidden">{{ 'general.accessibility.error' | t }} </span>
                        {% include 'icon-error' %}
                        <span class="product-form__error-message" data-error-message>{{ 'products.product.quantity_minimum_message' | t }}</span>
                    </div>

                    <span style="display: flex;">
                        <div id="play-artwork" class="btn product-single__play-button" onclick="tuneboomPlay()">
                            <i class="fas fa-play fa-play"></i>
                            <div class="ml-2">
                                Play
                            </div>
                        </div>
                        <div id="pause-artwork" class="btn product-single__play-button" onclick="tuneboomPause()">
                            <i class="fas fa-pause"></i>
                            <div class="ml-2">
                                Pause
                            </div>
                        </div>
                        <div class="product-form__controls-group product-form__controls-group--submit">
                        <div class="product-form__tuneboom-item product-form__item product-form__item--submit
                {%- if section.settings.enable_payment_button %} product-form__item--payment-button {%- endif -%}
                {%- if product.has_only_default_variant %} product-form__item--no-variants {%- endif -%}"
                        >



                            <div
                                    id="add-to-cart-id-{{ tuneboomID }}"
                                    {% if product.variants.size == 1 %}
                                        onclick="addToCart('{{ tuneboomID }}', '{{ product.variants.first.id }}')"
                                    {% else %}
                                        onclick="openResourceLicenses('{{ product.type }}', '{{ tuneboomID }}')"
                                    {% endif %}
                                    {% unless current_variant.available %} aria-disabled="true"{% endunless %}
                                        aria-label="{% unless current_variant.available %}{{ 'products.product.sold_out' | t }}{% else %}{{ 'products.product.add_to_cart' | t }}{% endunless %}"
                                    class="btn product-form__cart-submit"
                                    {% if settings.enable_ajax %}aria-haspopup="dialog"{% endif %}
                                            data-add-to-cart>
                                      <span data-add-to-cart-text>
                                        {% unless current_variant.available %}
                                            {{ 'products.product.sold_out' | t }}
                                            {% else %}
                                            {{ 'products.product.add_to_cart' | t }}
                                        {% endunless %}
                                      </span>
                            </div>
                        </div>
                    </div>
                    </span>


                {% endform %}
            </div>

            {%- comment -%}
                Live region for announcing updated price and availability to screen readers
            {%- endcomment -%}
            <p class="visually-hidden" data-product-status
               aria-live="polite"
               role="status"
            ></p>

            {%- comment -%}
                Live region for announcing that the product form has been submitted and the
                product is in the process being added to the cart
            {%- endcomment -%}
            <div class="product-single__tabs mt-4 mb-2">
                <nav>
                    <div class="tab-container">
                        <div class="tab">
                            Tracklist
                        </div>
                        <div class="tab-right">{{ tracks.size }} Tracks</div>
                    </div>
                </nav>
            </div>
            <div class="product-single__album-tracklist">
                {% for track in tracks %}
                    {% assign trackProduct = all_products[track.shopify.handle] %}
                    {% render 'tuneboom-track', renderTags: 'false', product: trackProduct, track: trackProduct.metafields.tuneboom.track, order: forloop.index %}
                    {% if forloop.last == true %}
                        <div class="divider col-md-12 col-sm-12 col-xs-12 mt-2" style="border-color: rgb(179, 179, 179);"></div>
                    {% endif %}
                {% endfor %}
            </div>
            {% if product.description %}
                <div class="product-single__description rte">
                    {{ product.description }}
                </div>
            {% endif %}
            {% include 'tuneboom-social-sharing', share_title: product.title, share_permalink: product.url, share_image: product.featured_media %}
        </div>
    </div>
</div>
{% unless product == empty %}
    <script type="application/json" id="ProductJson-{{ section.id }}">
    {{ product | json }}
  </script>
    <script type="application/json" id="ModelJson-{{ section.id }}">
    {{ product.media | where: 'media_type', 'model' | json }}
  </script>
{% endunless %}

<script>
  window.tuneboom.api.recommendations();
</script>
<script>
  /**
   * Album Template Script
   * ------------------------------------------------------------------------------
   *
   * @namespace product.tuneboom.track
   */

    // Page specfic variables
  const product = {{ product | json }};
  const resource = {{ album | json }};
  const trackProducts = {};
  const tracksArray = new Array({{ tracks.size }});
  const tracksMap = {};

  {% for albumTrack in tracks %}
  {% assign trackProduct = all_products[albumTrack.shopify.handle] %}
  {% if trackProduct %}
  {% assign track = trackProduct.metafields.tuneboom.track %}
  trackProducts['{{ track.id }}'] = {{ trackProduct | json }};
  tracksArray[{{ forloop.index }} - 1] = {{ track | json }};
  tracksMap['{{ track.id }}'] = {{ track | json }};
  $("#add-to-cart-id-{{ track.id }}").click(function (event) {
      event.stopPropagation();
      if ('{{ track.type }}' != 'song') {
        openTrackLicenses('Digital Track', '{{ track.id }}', {{ track.licenses | json }});
      } else {
        addToCart('{{ track.id }}', '{{ trackProduct.variants.first.id }}');
      }
    }
  );
  {% endif %}
  {% endfor %}

  const previewTracksArray = tracksArray.filter((track) => track.preview === 'true');
  const hideLicenseOverlay = () => {
    document.getElementById('tuneboom-modal-container').remove();
  };
  const renderLicenseOverlay = (track, product) => {
    const licenseModal = `
        <div id="tuneboom-modal-container" class="tuneboom d-flex justify-content-center align-items-center">
           <div id="tuneboom-modal">
                <div class="row d-flex flex-row align-items-center mb-4">
                    <div class="col-auto">
                        <h3 class="m-0">
                            Pricing & Licenses
                        </h3>
                    </div>
                    <div class="col text-right">
                        <i class="fas fa-times" onclick="hideLicenseOverlay()"></i>
                    </div>
                </div>
                <div id="modal-content">
                    <div class="artwork-container text-center">
                      <div class="artwork" onclick="${track && track.preview === 'true' ? `togglePlaySong('${track.id}', '${track.previewLink}')` : ''}">
                        <img class="artwork" src="${product.featured_image}"/>
                        <div class="artwork-overlay d-flex justify-content-center align-items-center">
                            ${track && track.preview === 'true' ? `
                               <div id="circle-container">
                            <button id="play-modal" class="btn-play">
                              <i class="fas fa-play fa-play"></i>
                            </button>
                            <button id="pause-modal" class="btn-pause">
                              <i class="fas fa-pause"></i>
                            </button>
                          </div>` : ''}

                        </div>
                      </div>
                       <h4 class="mt-2 mb-1 artwork-width">
                           ${product.title}
                       </h4>
                    </div>
                    <div id="licenses-list">
                    </div>
                </div>
             </div>
        </div>
`;
    $(licenseModal).appendTo('body').show();
    document.getElementById('tuneboom-modal-container').classList.add('visible');
  };


  const navigateToProduct = (event, productUrl) => {
    event.stopPropagation();
    window.location.href = productUrl;
  };

  const openTrackLicenses = (type, id, licenses) => {
    const licensesMap = licenses.reduce((acc, {license}) => {
      if (!acc[buildTuneboomSku(type, id, license._id)]) {
        acc[buildTuneboomSku(type, id, license._id)] = license;
      }
      return acc;
    }, {});

    renderLicenseOverlay(tracksMap[id], trackProducts[id]);

    trackProducts[id].variants.sort((a,b) => a.price - b.price).forEach(item => {
      renderLicense(licensesMap, item, id)
    });

    setCollapseTerms();

  };

  const openResourceLicenses = (type, id) => {
    const licensesMap = resource.licenses.reduce((acc, { license }) => {
      if (!acc[buildTuneboomSku(type, id, license._id)]) {
        acc[buildTuneboomSku(type, id, license._id)] = license;
      }
      return acc;
    }, {});

    renderLicenseOverlay(tracksArray[0], product);

    product.variants.sort((a,b) => a.price - b.price).forEach(item => {
      renderLicense(licensesMap, item, id)
    });

    setCollapseTerms();
  };

  const setCollapseTerms = () => {
    const coll = document.getElementsByClassName("collapsible");
    let i;
    for (i = 0; i < coll.length; i++) {
      coll[i].addEventListener("click", function() {
        this.classList.toggle("active");
        var content = this.nextElementSibling;
        if (content.style.display === "block") {
          content.style.display = "none";
        } else {
          content.style.display = "block";
        }
      });
    }
  };




  const renderLicense = (licensesMap, variant, resourceID) => {
    const newItem = `
      <div class="license">
          <div class="d-flex flex-row align-items-center justify-content-between">
            <div>
            <h4 class="m-0">${variant?.public_title || 'License'}</h4>
              <span class="files-available">
                  ${licensesMap[variant.sku].mp3Included ? "Mp3" : ''}
                  ${licensesMap[variant.sku].wavIncluded ? "Wav" : ''}
                  ${licensesMap[variant.sku].trackStemsIncluded ? "Stems" : ''}
              </span>
            </div>
            <button class="btn float-right" onclick="addToCart('${resourceID}', '${variant.id}')">
                <i class="fas fa-cart-plus"></i>
                ${Shopify.formatMoneyTuneboom(variant.price)}
            </button>
          </div>
          <div class="terms d-flex flex-row align-items-center mt-3 collapsible">
              <i class="fas fa-chevron-down mr-2 mt-1"/>
              <span>
                  Show usage terms
              </span>
          </div>
          <div class="collapsed-content">
              <div class="row">
                 <div class="col col-6">
                    <i class="fas fa-microphone-alt mr-2"/>
                   Used for Music Recording
                </div>
                <div class="col col-6">
                  <i class="fas fa-layer-group mr-2"/>
                   Distribute up to ${licensesMap[variant.sku].contract.copies} copies
                </div>
              </div>
             <div class="row">
                <div class="col col-6">
                    <i class="fas fa-video mr-2"/>
                   ${licensesMap[variant.sku].contract.musicVideo} Music Videos
                </div>
                <div class="col col-6">
                  <i class="fas fa-satellite-dish mr-2"/>
                   ${licensesMap[variant.sku].contract.audioStreams} Online Audio Streams
                </div>
              </div>
              <div class="row">
                <div class="col col-6">
                  ${licensesMap[variant.sku].contract.performancesProfit ? '<i class="fas fa-hand-holding-usd mr-2"/>' :'<i class="fas fa-hand-holding-heart mr-2"/>' }
                   For ${licensesMap[variant.sku].contract.performancesProfit ? '' : 'Non-'}Profit Live Performances
                </div>
                <div class="col col-6">
                    <i class="fas fa-broadcast-tower mr-2"/>
                   ${licensesMap[variant.sku].contract.broadcasting ? '' : 'No'} Radio Broadcasting Rights
                </div>
              </div>
        </div>
      </div>`;
    $(newItem).appendTo('#licenses-list').show();
  };

  const buildTuneboomSku = (type, id, licenseId) => {
    switch (type) {
      case 'Digital Track':
        return `tk_${id}_li_${licenseId}`;
      case 'Digital Album':
        return `al_${id}_li_${licenseId}`;
      case 'Digital Soundkit':
        return `so_${id}_li_${licenseId}`
    }
  };

  const addToCart = (resourceID, variantId)  => {
    $.post('/cart/add.json', { quantity: 1, id: variantId },
      function(variant) {
        document.getElementById(`add-to-cart-id-${resourceID}`).classList.add('light');
        document.getElementById(`add-to-cart-id-${resourceID}`).innerHTML = 'In cart <i class="fas fa-check-circle ml-2 animate__bounceIn"></i>';
        hideLicenseOverlay();

      }).fail(function() {
      alert('Failed to add track to cart!');
    });
  };
</script>


<script>
  $(`{% include 'tuneboom-player' %}`).appendTo('body').show();
  const wavesurfer = WaveSurfer.create({
    container: document.querySelector('#waveform'),
    waveColor: 'none',
    progressColor: 'none',
    cursorColor: 'none',
    backend: 'MediaElement',
    height: 7,
    responsive: true,
    backgroundColor:'none',
  });
  const waveOverlay = document.getElementById("waveform-overlay");
  const waveTicks = document.getElementById("waveform-ticks");
  const waveProgress = document.getElementById("waveform-progress");
  const iconVolumeUp = document.getElementById("icon-volume-up");
  const iconVolumeDown = document.getElementById("icon-volume-down");
  const iconVolumeOff = document.getElementById("icon-volume-off");
  const volumeInput = document.querySelector('#volume');
  const iconVolumeMute = document.getElementById("icon-volume-mute");


  let currentTrack = null;
  let previousTrack = null;

  function tuneboomPlay() {
    if (wavesurfer.isPlaying()) {
      return wavesurfer.pause();
    }

    if (currentTrack === null && previewTracksArray[0]) {
      document.getElementById('player-footer').style.bottom = 0;
      return togglePlaySong(previewTracksArray[0].id, previewTracksArray[0].previewLink);
    }
    wavesurfer.play();
  }

  function tuneboomPause() {
    wavesurfer.pause();
  }

  function tuneboomPrevious() {
    const currentIndex = previewTracksArray.findIndex((track) => currentTrack === track.id);
    const previousTrack = previewTracksArray[currentIndex - 1];
    if (previousTrack) {
      togglePlaySong(previousTrack.id, previousTrack.previewLink);
    }
  }

  function tuneboomNext() {
    const currentIndex = previewTracksArray.findIndex((track) => currentTrack === track.id);
    const nextTrack = previewTracksArray[currentIndex + 1];
    if (nextTrack) {
      togglePlaySong(nextTrack.id, nextTrack.previewLink);
    }
  }

  // Sets the details of the track player
  const     setPlayerDetails = function(trackId) {
    document.getElementById('tuneboom-title-text').innerHTML = trackProducts[trackId].title;
    document.getElementById('title-subtitle-text').innerHTML = getSubtitle(tracksMap[trackId]);

    const minVariant = trackProducts[trackId].variants.sort((a, b) => a.price - b.price)[0];
    document.getElementById('player-price').innerText = Shopify.formatMoneyTuneboom(minVariant.price);
    if (tracksMap[trackId].type === 'song') {
      return document.getElementById("player-add-to-cart").addEventListener('click', () => {
        addToCart(trackId, minVariant.id)
      });
    }
    if (tracksMap[trackId].isNotForSale) {
      document.getElementById("player-add-to-cart").style.display = 'none';
    } else {
      document.getElementById("player-add-to-cart").style.display = 'block';
      document.getElementById("player-add-to-cart").addEventListener('click', () => {
        openTrackLicenses('Digital Track', trackId, tracksMap[trackId].licenses);
      });
    }

  };

  const getSubtitle = (track) => {
    if (track?.collaborators) return track?.collaborators;
    if (track?.genres && track.genres.length > 0) return track.genres[0].name;
    if (track?.moods && track.moods.length > 0) return track.moods[0].name;
    return "";
  };

  // Load a track by index and highlight the corresponding link
  const setCurrentSong = function(trackId) {
    if (currentTrack) {
      previousTrack = currentTrack;
      document.getElementById(`data-track-id-${currentTrack}`).classList.remove('active');
      document.getElementById(`pause-${currentTrack}`).style.display = "none";
      document.getElementById(`play-${currentTrack}`).style.display = "block";
    }
    currentTrack = trackId;
    document.getElementById(`data-track-id-${trackId}`).classList.add('active');
  };


  function setup() {
    wavesurfer.setVolume(.5);
    volumeInput.value = wavesurfer.backend.getVolume() * 100;
    volumeInput.style.background = setVolumeGradient(wavesurfer.backend.getVolume());
    volumeInput.addEventListener('input', onChangePlayerVolume);
    volumeInput.addEventListener('change', onChangePlayerVolume)
  }

  const togglePlaySong = function(trackId, trackUrl) {
    // restart song if its the same track being played.
    if (currentTrack === trackId) {
      wavesurfer.playPause();
      return;
    }

    if (currentTrack === null) {
      document.getElementById('player-footer').style.bottom = 0;
    }

    setCurrentSong(trackId);
    setPlayerDetails(trackId);


    wavesurfer.load(trackUrl);

  };

  wavesurfer.on('ready', function () {
    tuneboomPlay();
  });

  wavesurfer.on('audioprocess', function (val) {
    // convert from seconds to mm:ss
    // updatePlayerTime();
    updateWaveProgress();
  });

  wavesurfer.on('finish', function () {
    document.getElementById("play-artwork").style.display = "flex";
    document.getElementById("pause-artwork").style.display = "none";
    document.getElementById("play").style.display = "block";
    document.getElementById("pause").style.display = "none";
    if(document.getElementById('play-modal')){
      document.getElementById('play-modal').style.display = 'block';
      document.getElementById('pause-modal').style.display = 'none';
    }
  });

  // Toggle play/pause text
  wavesurfer.on('play', function() {
    document.getElementById('play').style.display = 'none';
    document.getElementById('pause').style.display = 'block';
    document.getElementById(`pause-${currentTrack}`).style.display = "block";
    document.getElementById(`play-${currentTrack}`).style.display = "none";
    document.getElementById('play-artwork').style.display = 'none';
    document.getElementById('pause-artwork').style.display = 'flex';
    if(document.getElementById('play-modal')){
      document.getElementById('play-modal').style.display = 'none';
      document.getElementById('pause-modal').style.display = 'block';
    }
  });
  wavesurfer.on('pause', function() {
    document.getElementById('play').style.display = 'block';
    document.getElementById('pause').style.display = 'none';
    document.getElementById(`pause-${currentTrack}`).style.display = "none";
    document.getElementById(`play-${currentTrack}`).style.display = "block";
    document.getElementById('play-artwork').style.display = 'flex';
    document.getElementById('pause-artwork').style.display = 'none';
    if(document.getElementById('play-modal')){
      document.getElementById('play-modal').style.display = 'block';
      document.getElementById('pause-modal').style.display = 'none';
    }
  });

  // AUDIO PLAYER SCRIPT

  const onChangePlayerVolume = function (e) {
    wavesurfer.setVolume(e.target.value / 100);
    clearIcons();
    if (wavesurfer.getVolume() == 0) iconVolumeOff.style.display = "block";
    if (wavesurfer.getVolume() < .5 && wavesurfer.getVolume() > 0) iconVolumeDown.style.display = "block";
    if (wavesurfer.getVolume() >= .5) iconVolumeUp.style.display = "block";
    volumeInput.style.background = setVolumeGradient(e.target.value / 100);
  };

  const clearIcons = () => {
    iconVolumeUp.style.display = "none";
    iconVolumeDown.style.display = "none";
    iconVolumeOff.style.display = "none";
    iconVolumeMute.style.display = "none";
  };

  const toggleMute = () => {
    clearIcons();
    wavesurfer.toggleMute();

    if (wavesurfer.getMute()) {
      volumeInput.style.background = setVolumeGradient(0);
      volumeInput.value = 0;
      iconVolumeMute.style.display = "block";
    } else {
      volumeInput.style.background = setVolumeGradient(.5);
      volumeInput.value = .5;
      if (wavesurfer.getVolume() < .5) iconVolumeDown.style.display = "block";
      if (wavesurfer.getVolume() >= .5) iconVolumeUp.style.display = "block";
    }
  };
  const updatePlayerTime = () => {
    const timer = new Date(wavesurfer.getCurrentTime() * 1000).toISOString().substr(14, 5);
    const fullTime = new Date((wavesurfer.getDuration() || 0) * 1000).toISOString().substr(14, 5);
    duration.innerHTML = `${timer} / ${fullTime}`;
  };

  const updateWaveProgress = () => {
    const progress = (wavesurfer.getCurrentTime() / wavesurfer.getDuration());
    waveOverlay.value = progress;
    // offset progress to align with needle
    const tickOffset = (99.5 + progress) - (progress * 100);
    const progressOffset = (progress * 100) + (.5 - progress);
    waveTicks.style.width = `${tickOffset}%`;
    waveProgress.style.width = `${progressOffset}%`;

    updatePlayerTime();

  };


  const seek = (val) => {
    wavesurfer.seekTo(parseFloat(val));
    updateWaveProgress();
  }

  function setVolumeGradient(val) {
    return 'linear-gradient(to right, white 0%, white ' + val * 100  + '%, #828282 ' + val * 100 + '%, #828282 100%)';
  }

  setup();
</script>

{% schema %}
    {
    "name": {
    "cs": "Stránky produktů",
    "da": "Produktsider",
    "de": "Produktseiten",
    "en": "Product pages",
    "es": "Páginas de productos",
    "fi": "Tuotesivut",
    "fr": "Pages de produits",
    "hi": "उत्पाद पेज",
    "it": "Pagine di prodotto",
    "ja": "商品ページ",
    "ko": "제품 페이지",
    "nb": "Produktsider",
    "nl": "Productpagina's",
    "pl": "Strony produktu",
    "pt-BR": "Páginas de produtos",
    "pt-PT": "Páginas de produtos",
    "sv": "Produktsidor",
    "th": "หน้าสินค้า",
    "tr": "Ürün sayfaları",
    "vi": "Trang sản phẩm",
    "zh-CN": "产品页面",
    "zh-TW": "產品頁面"
    },
    "settings": [
    {
    "type": "checkbox",
    "id": "show_quantity_selector",
    "label": {
    "cs": "Zobrazit výběr množství",
    "da": "Vis antalsvælger",
    "de": "Mengenauswahl anzeigen",
    "en": "Show quantity selector",
    "es": "Mostrar selector de cantidad",
    "fi": "Näytä määrän valitsin",
    "fr": "Afficher le sélecteur de quantité",
    "hi": "मात्रा चयनकर्ता दिखाएं",
    "it": "Mostra selettore quantità",
    "ja": "数量セレクターを表示する",
    "ko": "수량 선택기 표시",
    "nb": "Vis mengdevelger",
    "nl": "Hoeveelheidskiezer weergeven",
    "pl": "Pokaż selektor ilości",
    "pt-BR": "Exibir seletor de quantidade",
    "pt-PT": "Mostrar um seletor de quantidade",
    "sv": "Visa kvantitetsväljare",
    "th": "แสดงตัวเลือกจำนวน",
    "tr": "Adet seçiciyi göster",
    "vi": "Hiển thị hộp chọn số lượng",
    "zh-CN": "显示数量选择器",
    "zh-TW": "顯示數量選擇器"
    },
    "default": false
    },
    {
    "type": "checkbox",
    "id": "show_vendor",
    "label": {
    "cs": "Zobrazit dodavatele",
    "da": "Vis leverandør",
    "de": "Lieferanten anzeigen",
    "en": "Show vendor",
    "es": "Mostrar proveedor",
    "fi": "Näytä myyjä",
    "fr": "Afficher les vendeurs",
    "hi": "विक्रेता दिखाएं",
    "it": "Mostra fornitore",
    "ja": "販売元を表示する",
    "ko": "공급업체 표시",
    "nb": "Vis leverandør",
    "nl": "Leverancier weergeven",
    "pl": "Pokaż dostawcę",
    "pt-BR": "Exibir fornecedor",
    "pt-PT": "Mostrar fornecedor",
    "sv": "Visa säljare",
    "th": "แสดงผู้ขาย",
    "tr": "Satıcıyı göster",
    "vi": "Hiển thị nhà cung cấp",
    "zh-CN": "显示厂商",
    "zh-TW": "顯示廠商"
    },
    "default": false
    },
    {
    "type": "checkbox",
    "id": "enable_payment_button",
    "label": {
    "cs": "Zobrazit dynamické tlačítko pokladny",
    "da": "Vis dynamisk betalingsknap",
    "de": "Dynamischen Checkout Button anzeigen",
    "en": "Show dynamic checkout button",
    "es": "Mostrar botón de pago dinámico",
    "fi": "Näytä dynaaminen kassapainike",
    "fr": "Afficher le bouton de paiement dynamique",
    "hi": "डायनेमिक चेकआउट बटन दिखाएं",
    "it": "Mostra pulsante di check-out dinamico",
    "ja": "動的チェックアウトボタンを表示する",
    "ko": "동적 결제 버튼 표시",
    "nb": "Vis dynamisk knapp for å gå til kassen",
    "nl": "Dynamische betaalknop weergeven",
    "pl": "Pokaż dynamiczny przycisk realizacji zakupu",
    "pt-BR": "Exibir botão de checkout dinâmico",
    "pt-PT": "Mostrar o botão dinâmico de finalização da compra",
    "sv": "Visa dynamiska utcheckningsknappar",
    "th": "แสดงปุ่มชำระเงินแบบไดนามิก",
    "tr": "Dinamik ödeme düğmesini göster",
    "vi": "Hiển thị nút thanh toán động",
    "zh-CN": "显示动态结账按钮",
    "zh-TW": "顯示動態結帳按鈕"
    },
    "info": {
    "cs": "Každý zákazník uvidí platební metodu, kterou ze všech metod dostupných v obchodě (například PayPal nebo Apple Pay) nejvíce preferuje. [Další informace](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
    "da": "Den enkelte kunde vil se sin foretrukne betalingsmetode blandt dem, der er tilgængelige i din butik, f.eks. PayPal eller Apple Pay. [Få mere at vide](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
    "de": "Jeder Kunde sieht seine bevorzugte Zahlungsmethode aus den in deinem Shop verfügbaren Zahlungsmethoden wie PayPal oder Apple Pay. [Mehr Informationen](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
    "en": "Each customer will see their preferred payment method from those available on your store, such as PayPal or Apple Pay. [Learn more](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
    "es": "Cada cliente verá su forma de pago preferida entre las disponibles en tu tienda, como PayPal o Apple Pay. [Más información](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
    "fi": "Kukin asiakas näkee ensisijaisen valintansa kauppasi tarjoamista maksutavoista, esim. PayPal tai Apple Pay. [Lisätietoja](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
    "fr": "Chaque client verra son moyen de paiement préféré parmi ceux qui sont proposés sur votre boutique, tels que PayPal ou Apple Pay. [En savoir plus](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
    "hi": "प्रत्येक ग्राहक आपके स्टोर पर उपलब्ध अपनी पसंदीदा भुगतान की विधि देखेंगे जैसे PayPal या Apple Pay. [अधिक जानें](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
    "it": "Ogni cliente vedrà il suo metodo di pagamento preferito tra quelli disponibili nel tuo negozio, come PayPal o Apple Pay. [Maggiori informazioni](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
    "ja": "PayPalやApple Payなど、ストアで利用可能な希望の決済方法がお客様に表示されます。[詳しくはこちら](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
    "ko": "각 고객은 PayPal 또는 Apple Pay와 같이 스토어에서 사용 가능한 지불 방법을 확인할 수 있습니다. [자세히 알아보기](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
    "nb": "Hver enkelt kunde vil se sin foretrukne betalingsmåte blant de som er tilgjengelig i butikken din, som PayPal eller Apple Pay. [Finn ut mer](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
    "nl": "Elke klant ziet zijn of haar beschikbare voorkeursmethode om af te rekenen, zoals PayPal of Apple Pay. [Meer informatie](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
    "pl": "Każdy klient zobaczy swoją preferowaną metodę płatności wśród metod dostępnych w Twoim sklepie, np. PayPal lub Apple Pay. [Dowiedz się więcej](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
    "pt-BR": "Cada cliente verá a forma de pagamento preferencial dele dentre as disponíveis na loja, como PayPal ou Apple Pay. [Saiba mais](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
    "pt-PT": "Cada cliente irá ver o seu método de pagamento preferido entre os disponíveis na loja, como o PayPal ou Apple Pay. [Saiba mais](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
    "sv": "Varje kund kommer att se den föredragna betalningsmetoden från de som finns tillgängliga i din butik, till exempel PayPal eller Apple Pay. [Läs mer](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
    "th": "ลูกค้าแต่ละรายจะเห็นวิธีการชำระเงินที่ต้องการจากวิธีที่ใช้ได้ในร้านค้าของคุณ เช่น PayPal หรือ Apple Pay [ดูข้อมูลเพิ่มเติม](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
    "tr": "Her müşteri, mağazanız sunulanlar arasından tercih ettikleri ödeme yöntemini görür (ör. PayPal veya Apple Pay). [Daha fazla bilgi edinin](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
    "vi": "Mỗi khách hàng sẽ thấy phương thức thanh toán ưu tiên trong những phương thức thanh toán được hỗ trợ tại cửa hàng như PayPal hoặc Apple Pay. [Tìm hiểu thêm](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
    "zh-CN": "每位客户都可在您商店提供的付款方式中看到他们的首选付款方式，例如 PayPal 或 Apple Pay。[了解详细信息](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)",
    "zh-TW": "每位顧客都可以在您商店內開放使用的付款方式中看見他們偏好使用的方式，如 PayPal、Apple Pay 等。[深入瞭解](https://help.shopify.com/manual/using-themes/change-the-layout/dynamic-checkout)"
    },
    "default": true
    },
    {
    "type": "checkbox",
    "id": "show_share_buttons",
    "label": {
    "cs": "Zobrazit tlačítka pro sdílení na sociálních sítích",
    "da": "Vis knapper til deling på sociale medier",
    "de": "Buttons für Social Media anzeigen",
    "en": "Show social sharing buttons",
    "es": "Mostrar botones para compartir en redes sociales",
    "fi": "Näytä sosiaalisen median jakamispainikkeet",
    "fr": "Affichez les boutons de partage sur les médias sociaux",
    "hi": "सोशल शेयरिंग बटन दिखाएं",
    "it": "Mostra i pulsanti per la condivisione sui social",
    "ja": "ソーシャルメディアでの共有ボタンを表示する",
    "ko": "소셜 공유 버튼 표시",
    "nb": "Vis knapper for deling på sosiale medier",
    "nl": "Knoppen voor sociaal delen weergeven",
    "pl": "Pokaż przyciski udostępniania w mediach społecznościowych",
    "pt-BR": "Exibir botões de compartilhamento em redes sociais",
    "pt-PT": "Mostrar botões de partilha nas redes sociais",
    "sv": "Visa knappar för delning i sociala medier",
    "th": "แสดงปุ่มสำหรับแชร์ลงโซเชียล",
    "tr": "Sosyal medya paylaşım düğmelerini göster",
    "vi": "Hiển thị nút chia sẻ qua mạng xã hội",
    "zh-CN": "显示社交分享按钮",
    "zh-TW": "顯示社群分享按鈕"
    },
    "default": true
    },
    {
    "type": "header",
    "content": {
    "cs": "Multimédia",
    "da": "Medie",
    "de": "Medien",
    "en": "Media",
    "es": "Elementos multimedia",
    "fi": "Media",
    "fr": "Support multimédia",
    "hi": "मीडिया",
    "it": "Media",
    "ja": "メディア",
    "ko": "미디어",
    "nb": "Medier",
    "nl": "Media",
    "pl": "Multimedia",
    "pt-BR": "Mídia",
    "pt-PT": "Multimédia",
    "sv": "Media",
    "th": "สื่อ",
    "tr": "Medya",
    "vi": "Nội dung đa phương tiện",
    "zh-CN": "媒体",
    "zh-TW": "媒體"
    },
    "info": {
    "cs": "Další informace o [typech multimédií](https://help.shopify.com/manual/products/product-media)",
    "da": "Få mere at vide om [media types](https://help.shopify.com/manual/products/product-media)",
    "de": "Mehr Informationen über [Medientypen ](https://help.shopify.com/manual/products/product-media)",
    "en": "Learn more about [media types](https://help.shopify.com/manual/products/product-media)",
    "es": "Más información sobre [tipos de archivos multimedia](https://help.shopify.com/manual/products/product-media)",
    "fi": "Lue lisää [mediatyypeistä](https://help.shopify.com/manual/products/product-media)",
    "fr": "En savoir plus sur les [types de supports multimédia](https://help.shopify.com/manual/products/product-media)",
    "hi": "[मीडिया प्रकार](https://help.shopify.com/manual/products/product-media) के बारे में और जानें",
    "it": "Scopri di più sulle [tipologie di file multimediali](https://help.shopify.com/manual/products/product-media)",
    "ja": "[メディアのタイプ](https://help.shopify.com/manual/products/product-media) について詳しくはこちら",
    "ko": "[미디어 유형](https://help.shopify.com/manual/products/product-media)에 대해 자세히 알아보기",
    "nb": "Lær mer om [medietyper](https://help.shopify.com/manual/products/product-media)",
    "nl": "Meer informatie over [mediatypen](https://help.shopify.com/manual/products/product-media)",
    "pl": "Dowiedz się więcej o [typach multimediów](https://help.shopify.com/manual/products/product-media)",
    "pt-BR": "Saiba mais sobre [tipos de mídia](https://help.shopify.com/manual/products/product-media)",
    "pt-PT": "Saiba mais sobre [media types](https://help.shopify.com/manual/products/product-media)",
    "sv": "Läs mer om [mediatyper](https://help.shopify.com/manual/products/product-media)",
    "th": "ดูข้อมูลเพิ่มเติมเกี่ยวกับ [ประเภทของสื่อ](https://help.shopify.com/manual/products/product-media)",
    "tr": "[Medya türleri](https://help.shopify.com/manual/products/product-media) hakkında daha fazla bilgi edinin",
    "vi": "Tìm hiểu thêm về [loại phương tiện](https://help.shopify.com/manual/products/product-media)",
    "zh-CN": "详细了解[媒体类型](https://help.shopify.com/manual/products/product-media)",
    "zh-TW": "深入瞭解 [媒體類型](https://help.shopify.com/manual/products/product-media)"
    }
    },
    {
    "type": "select",
    "id": "media_size",
    "label": {
    "cs": "Velikost",
    "da": "Størrelse",
    "de": "Größe",
    "en": "Size",
    "es": "Tamaño",
    "fi": "Koko",
    "fr": "Taille",
    "hi": "आकार",
    "it": "Dimensione",
    "ja": "サイズ",
    "ko": "사이즈",
    "nb": "Størrelse",
    "nl": "Grootte",
    "pl": "Rozmiar",
    "pt-BR": "Tamanho",
    "pt-PT": "Tamanho",
    "sv": "Storlek",
    "th": "ขนาด",
    "tr": "Boyut",
    "vi": "Cỡ",
    "zh-CN": "大小",
    "zh-TW": "尺寸"
    },
    "options": [
    {
    "value": "small",
    "label": {
    "cs": "Malá",
    "da": "Lille",
    "de": "Klein",
    "en": "Small",
    "es": "Pequeño",
    "fi": "Pieni",
    "fr": "Petit",
    "hi": "छोटा",
    "it": "Piccolo",
    "ja": "スモール",
    "ko": "스몰",
    "nb": "Liten",
    "nl": "Klein",
    "pl": "Mały",
    "pt-BR": "Pequeno",
    "pt-PT": "Pequeno",
    "sv": "Liten",
    "th": "เล็ก",
    "tr": "Küçük",
    "vi": "Nhỏ",
    "zh-CN": "小",
    "zh-TW": "小型"
    }
    },
    {
    "value": "medium",
    "label": {
    "cs": "Střední",
    "da": "Medium",
    "de": "Mittel",
    "en": "Medium",
    "es": "Mediano",
    "fi": "Keskisuuri",
    "fr": "Moyenne",
    "hi": "मध्यम",
    "it": "Medio",
    "ja": "中",
    "ko": "보통",
    "nb": "Middels",
    "nl": "Gemiddeld",
    "pl": "Średni",
    "pt-BR": "Médio",
    "pt-PT": "Médio",
    "sv": "Medium",
    "th": "ปานกลาง",
    "tr": "Orta",
    "vi": "Trung bình",
    "zh-CN": "中等",
    "zh-TW": "中等"
    }
    },
    {
    "value": "large",
    "label": {
    "cs": "Velká",
    "da": "Stor",
    "de": "Groß",
    "en": "Large",
    "es": "Grande",
    "fi": "Suuri",
    "fr": "Grande",
    "hi": "बड़ा",
    "it": "Grande",
    "ja": "大",
    "ko": "라지",
    "nb": "Stor",
    "nl": "Groot",
    "pl": "Duży",
    "pt-BR": "Grande",
    "pt-PT": "Grande",
    "sv": "Stor",
    "th": "ใหญ่",
    "tr": "Büyük",
    "vi": "Lớn",
    "zh-CN": "大",
    "zh-TW": "大型"
    }
    },
    {
    "value": "full",
    "label": {
    "cs": "Plná šířka",
    "da": "Fuld bredde",
    "de": "Volle Breite",
    "en": "Full-width",
    "es": "Ancho completo",
    "fi": "Täysi leveys",
    "fr": "Pleine largeur",
    "hi": "पूर्ण चौड़ाई",
    "it": "Intera larghezza",
    "ja": "全幅",
    "ko": "전체 폭",
    "nb": "Full bredde",
    "nl": "Volledige breedte",
    "pl": "Pełna szerokość",
    "pt-BR": "Largura completa",
    "pt-PT": "Largura completa",
    "sv": "Full bredd",
    "th": "เต็มความกว้าง",
    "tr": "Tam genişlikli",
    "vi": "Độ rộng đầy đủ",
    "zh-CN": "全宽",
    "zh-TW": "完整寬度"
    }
    }
    ],
    "default": "medium"
    },
    {
    "type": "checkbox",
    "id": "enable_image_zoom",
    "label": {
    "cs": "Povolit zvětšení obrázku",
    "da": "Aktivér billedzoom",
    "de": "Foto-Zoom zulassen",
    "en": "Enable image zoom",
    "es": "Habilitar zoom de imagen",
    "fi": "Ota kuvan zoomaus käyttöön",
    "fr": "Activer le zoom d'image",
    "hi": "इमेज ज़ूम सक्षम करें",
    "it": "Abilita lo zoom dell'immagine",
    "ja": "画像ズームを有効にする",
    "ko": "이미지 확대 사용",
    "nb": "Aktiver bildezoom",
    "nl": "Inzoomen op afbeelding inschakelen",
    "pl": "Włącz powiększenie obrazu",
    "pt-BR": "Habilitar o zoom da imagem",
    "pt-PT": "Ativar o zoom da imagem",
    "sv": "Aktivera bildzoom",
    "th": "เปิดใช้การซูมภาพ",
    "tr": "Görsel yakınlaştırmayı etkinleştir",
    "vi": "Bật thu phóng hình ảnh",
    "zh-CN": "启用图片缩放",
    "zh-TW": "啟用圖片縮放"
    },
    "default": true
    },
    {
    "type": "checkbox",
    "id": "enable_video_looping",
    "label": {
    "cs": "Povolit smyčky videa",
    "da": "Aktivér looping af videoer",
    "de": "Videoschleife aktivieren",
    "en": "Enable video looping",
    "es": "Habilitar la reproducción de video en bucle",
    "fi": "Ota käyttöön videosilmukka",
    "fr": "Activer le bouclage de la vidéo",
    "hi": "वीडियो लूपिंग सक्षम करें",
    "it": "Abilita la riproduzione in loop dei video",
    "ja": "ビデオのループを有効にする",
    "ko": "동영상 루프",
    "nb": "Aktiver løkkeavspilling av video",
    "nl": "Video-looping inschakelen",
    "pl": "Włącz zapętlanie wideo",
    "pt-BR": "Habilitar loop de vídeo",
    "pt-PT": "Ativar ciclo de vídeo",
    "sv": "Aktivera video-loopning",
    "th": "เปิดใช้การวนซ้ำวิดีโอ",
    "tr": "Video döngüsünü etkinleştir",
    "vi": "Bật vòng lặp video",
    "zh-CN": "启用视频循环",
    "zh-TW": "啟用影片循環功能"
    },
    "default": false
    }
    ]
    }
{% endschema %}
